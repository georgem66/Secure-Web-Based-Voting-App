version: '3.8'

services:
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: secure_voting
      POSTGRES_USER: voting_user
      POSTGRES_PASSWORD: secure_password_2024!
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - voting_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://voting_user:secure_password_2024!@database:5432/secure_voting
      JWT_SECRET: your_jwt_secret_key_change_in_production
      ENCRYPTION_KEY: your_32_byte_encryption_key_here
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - database
    networks:
      - voting_network
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: https://localhost:3001/api
    networks:
      - voting_network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - voting_network

volumes:
  postgres_data:

networks:
  voting_network:
    driver: bridge